@model ProductModel

@{
    var userRole = Context.Request.Cookies["UserRoleCookie"];
    var isAuthenticated = !string.IsNullOrEmpty(Context.Request.Cookies["UserNameCookie"]);
    var isAdmin = (isAuthenticated && userRole == "Admin");
    
    if(!isAdmin)
    {
        Context.Response.Redirect("/Home/Index");
    }
}

@{
    ViewData["Title"] = "Product";
}

<main>
    <h2>Edit Product</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.Name)
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl)
            @Html.TextBoxFor(model => model.ImageUrl, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price)
            @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description)
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
        <!-- Category selection form -->
        <form asp-controller="Product" asp-action="Edit" method="post">
            <input type="hidden" name="id" value="@Model.ID"/>
            <div class="form-group">
                <label for="category">Categories:</label>
                <div>
                    @foreach (var category in ViewBag.AllCategories)
                    {
                        var isChecked = Model.SelectedCategoryIds.Contains(category.ID) ? "checked" : "";
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="category_@category.ID" name="SelectedCategoryIds" value="@category.ID" @isChecked>
                            <label class="form-check-label" for="category_@category.ID">
                                @category.Name
                            </label>
                        </div>
                    }
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Update product</button>
        </form>
        <div class="form-group">
            <a href="@Url.Action("Index")" class="btn btn-secondary">Cancel</a>
        </div>
    }
</main>